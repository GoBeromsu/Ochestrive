{"ast":null,"code":"var _jsxFileName = \"C:\\\\net_Ochestrive\\\\front\\\\frontend\\\\src\\\\components\\\\VideoContainer.jsx\";\nimport styled, { css } from \"styled-components\";\nimport Video from \"./Video\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoContainer = _ref => {\n  let {\n    streamArray,\n    myStream\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RayoutContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        stream: myStream,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), streamArray.map((item, key) => /*#__PURE__*/_jsxDEV(Video, {\n        stream: item.stream\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = VideoContainer;\nconst RayoutContainer = styled.div`\n    display: grid;\n    row-gap: 20px;\n    column-gap: 20px;\n    ${props => {\n  {\n    /*if(props.l == 0)*/\n  }\n  return css`grid-template-columns: `;\n}}\n\n    \n`;\n_c2 = RayoutContainer;\nexport default VideoContainer;\n/*\r\nelse if(props.l > 1 && props.l < 4)\r\n            return css`grid-template-columns: repeat(auto-fill, minmax(50%, auto))`*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoContainer\");\n$RefreshReg$(_c2, \"RayoutContainer\");","map":{"version":3,"names":["styled","css","Video","VideoContainer","streamArray","myStream","map","item","key","stream","RayoutContainer","div","props"],"sources":["C:/net_Ochestrive/front/frontend/src/components/VideoContainer.jsx"],"sourcesContent":["import styled, {css} from \"styled-components\";\r\nimport Video from \"./Video\";\r\n\r\nconst VideoContainer = ({streamArray, myStream}) => {\r\n    return (\r\n        <>\r\n            <RayoutContainer>\r\n                <Video stream={myStream} autoPlay></Video>\r\n                {\r\n                    streamArray.map((item, key) => (\r\n                        <Video key={key} stream={item.stream} />\r\n                    ))\r\n                    }\r\n            </RayoutContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nconst RayoutContainer = styled.div`\r\n    display: grid;\r\n    row-gap: 20px;\r\n    column-gap: 20px;\r\n    ${(props) => {\r\n        {/*if(props.l == 0)*/}\r\n          return css`grid-template-columns: `\r\n        \r\n    }}\r\n\r\n    \r\n`\r\nexport default VideoContainer;\r\n\r\n/*\r\nelse if(props.l > 1 && props.l < 4)\r\n            return css`grid-template-columns: repeat(auto-fill, minmax(50%, auto))`*/"],"mappings":";AAAA,OAAOA,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,cAAc,GAAG,QAA6B;EAAA,IAA5B;IAACC,WAAD;IAAcC;EAAd,CAA4B;EAChD,oBACI;IAAA,uBACI,QAAC,eAAD;MAAA,wBACI,QAAC,KAAD;QAAO,MAAM,EAAEA,QAAf;QAAyB,QAAQ;MAAjC;QAAA;QAAA;QAAA;MAAA,QADJ,EAGQD,WAAW,CAACE,GAAZ,CAAgB,CAACC,IAAD,EAAOC,GAAP,kBACZ,QAAC,KAAD;QAAiB,MAAM,EAAED,IAAI,CAACE;MAA9B,GAAYD,GAAZ;QAAA;QAAA;QAAA;MAAA,QADJ,CAHR;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAYH,CAbD;;KAAML,c;AAeN,MAAMO,eAAe,GAAGV,MAAM,CAACW,GAAI;AACnC;AACA;AACA;AACA,MAAOC,KAAD,IAAW;EACT;IAAC;EAAqB;EACpB,OAAOX,GAAI,yBAAX;AAEL,CAAC;AACN;AACA;AACA,CAXA;MAAMS,e;AAYN,eAAeP,cAAf;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}